# 基础镜像
FROM php:7.3.29-fpm-alpine

# 可以在宿主机中增加 82:www-data-docker 用户和用户组
LABEL MAINTAINER zhangyanjiong@163.com
LABEL description="基于官方 alpine php 安装了基础扩展的 php-fpm 镜像"

# 复制文件
#COPY ./* /tmp/

# fix timezone
ARG TIMEZONE=Asia/Shanghai
ENV TZ=${TIMEZONE}

# 拷贝 php.ini 文件
RUN cp "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini" \
    # 使用国内镜像 \
    && sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories && apk update \
    \
    # 设置时区 \
    && apk add --no-cache tzdata \
    && cp /usr/share/zoneinfo/${TZ} /etc/localtime \
    && echo "${TZ}" > /etc/timezone \
    \
    # 提取 PHP 源码 \
    && docker-php-source extract \
    \
    # 安装依赖 \
    && apk add --no-cache \
        # bz2 \
        bzip2-dev \
        # gd \
        libpng-dev \
        # gd \
        libjpeg-turbo-dev \
        # gettext \
#        gettext-dev \
        # gmp \
#        gmp-dev \
        # imap \
#        imap-dev \
        # intl \
        icu-dev \
        # ldap \
#        openldap-dev \
        # pdo_dblib \
#        freetds-dev \
        # pdo_pgsql pgsql \
        postgresql-dev\
        # pdo_odbc \
#        unixodbc-dev \
        # pspell \
#        aspell-dev \
        # snmp \
#        net-snmp-dev \
        # tidy \
#        tidyhtml-dev \
        # xsl \
        libxslt-dev \
        # zip \
        libzip-dev \
        # soap wddx xmlrpc \
        libxml2-dev \
    \
    # 配置 PHP Core 扩展 \
#    && docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC,/usr/ \
    \
    # 安装 PHP Core 扩展 \
#    && docker-php-ext-install -j$(nproc) \
#        bcmath bz2 calendar dba exif gd gettext gmp imap intl ldap mysqli opcache pcntl pdo_dblib pdo_mysql pdo_pgsql pdo_odbc pgsql pspell \
#        shmop snmp tidy soap sockets sysvmsg sysvsem sysvshm wddx xmlrpc xsl zend_test zip \
    && docker-php-ext-install -j$(nproc) bcmath bz2 gd intl mysqli opcache pdo_mysql pdo_pgsql pgsql sockets xmlrpc xsl zip \
    \
    # 安装 enchant 扩展 \
#    && sed -i '$a https://mirrors.aliyun.com/alpine/v3.11/main' /etc/apk/repositories \
#    && sed -i '$a https://mirrors.aliyun.com/alpine/v3.11/community' /etc/apk/repositories \
#    && apk update \
#    && apk add --no-cache enchant-dev \
#    && docker-php-ext-install -j$(nproc) enchant \
#    && sed -i '/https:\/\/mirrors.aliyun.com\/alpine\/v3.11\/main/d' /etc/apk/repositories \
#    && sed -i '/https:\/\/mirrors.aliyun.com\/alpine\/v3.11\/community/d' /etc/apk/repositories \
#    && apk update \
    \
    # 有问题的扩展（单独安装没有问题，与其它扩展一起安装成功后 PHP 会有错误） \
#    && apk add --no-cache recode-dev \
#    && docker-php-ext-install -j$(nproc) recode \
    \
    # 安装 interbase 扩展（未完成） \
#    && docker-php-ext-install -j$(nproc) interbase \
    \
    # 安装 odbc 扩展（未完成） \
#    && docker-php-ext-install -j$(nproc) odbc \
    \
    # 安装 pdo_firebird 扩展（未完成） \
#    && docker-php-ext-install -j$(nproc) pdo_firebird \
    \
    # 安装 oci8、pdo_oci 扩展（未完成） \
#    && docker-php-ext-install -j$(nproc) oci8 \
#    && docker-php-ext-install -j$(nproc) pdo_oci \
    \
    # 安装依赖 \
    && apk add --no-cache $PHPIZE_DEPS \
        # memcache memcached grpc \
        libzip-dev \
        # memcached \
        libmemcached-dev \
        # uuid \
#        libuuid \
        # uuid \
#        util-linux-dev \
        # amqp \
#        rabbitmq-c-dev \
        # grpc \
#        linux-headers \
    \
    # 安装 PECL 扩展 \
#    && pecl install redis mongodb xdebug igbinary msgpack memcache-4.0.5.2 memcached uuid amqp grpc \
#    && docker-php-ext-enable redis mongodb xdebug igbinary msgpack memcache memcached uuid amqp grpc \
    && pecl install redis mongodb memcache-4.0.5.2 memcached \
    && docker-php-ext-enable redis mongodb memcache memcached \
    && apk del $PHPIZE_DEPS \
    \
    # 清除安装缓存 \
    && rm -rf /tmp/* \
    && rm -rf /var/cache/apk/* \
    && rm -rf /var/lib/apt/lists/* \
    \
    # 删除提取的 PHP 源码 \
    && docker-php-source delete
    
# 工作目录
WORKDIR /var/www/html

# 服务端口
EXPOSE 9000

# 默认的启动命令
CMD ["php-fpm"]